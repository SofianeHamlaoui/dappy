!function(e){var t={};function n(r){if(t[r])return t[r].exports;var a=t[r]={i:r,l:!1,exports:{}};return e[r].call(a.exports,a,a.exports,n),a.l=!0,a.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var a in e)n.d(r,a,function(t){return e[t]}.bind(null,a));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=4)}([function(e,t){e.exports=React},function(e,t){e.exports=ReactDOM},function(e,t,n){const{erc1155Term:r}=n(11),{createTokensTerm:a}=n(12),{purchaseTokensTerm:o}=n(13),{sendTokensTerm:i}=n(14),{setLockedTerm:s}=n(15),{updateTokenDataTerm:u}=n(16),{updateBagDataTerm:c}=n(17);e.exports={erc1155Term:r,createTokensTerm:a,purchaseTokensTerm:o,sendTokensTerm:i,setLockedTerm:s,updateTokenDataTerm:u,updateBagDataTerm:c}},function(e,t,n){"use strict";n.d(t,"a",(function(){return U}));var r=n(0),a=n.n(r),o=n(2),i=new Intl.NumberFormat("en-US",{maximumFractionDigits:8});function s(e){return(s="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function u(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function c(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function l(e,t){return(l=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function h(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}();return function(){var n,r=d(e);if(t){var a=d(this).constructor;n=Reflect.construct(r,arguments,a)}else n=r.apply(this,arguments);return f(this,n)}}function f(e,t){return!t||"object"!==s(t)&&"function"!=typeof t?p(e):t}function p(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function d(e){return(d=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function y(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var g=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&l(e,t)}(s,e);var t,n,r,o=h(s);function s(){var e;u(this,s);for(var t=arguments.length,n=new Array(t),r=0;r<t;r++)n[r]=arguments[r];return y(p(e=o.call.apply(o,[this].concat(n))),"state",{title:"Help me buy a sword !",description:"",price:1e8,quantity:1e3}),e}return t=s,(n=[{key:"render",value:function(){var e=this;return console.log(this.state),a.a.createElement("div",{className:"genesis-form form"},a.a.createElement("div",{id:"canvas"}),a.a.createElement("p",null,"Hi ! The tipping board has not been initialized yet. Choose a price per token, choose the quantity of tokens you want to create. And eventually title and description.",a.a.createElement("br",null),a.a.createElement("br",null),"By default one token equals one REV and 1000 tokens are created for the tip board. Fill free to change the values. Remember that 1 REV equals 100.000.000 dusts.",a.a.createElement("br",null),a.a.createElement("br",null)),a.a.createElement("div",{className:"field"},a.a.createElement("label",{className:"label"},"Title"),a.a.createElement("div",{className:"control"},a.a.createElement("input",{defaultValue:this.state.title,onInput:function(t){return e.setState({title:t.target.value})},className:"input",type:"text"}))),a.a.createElement("div",{className:"field"},a.a.createElement("label",{className:"label"},"Description"),a.a.createElement("div",{className:"control"},a.a.createElement("textarea",{className:"textarea",onInput:function(t){e.setState({description:t.target.value})},defaultValue:this.state.description}))),a.a.createElement("div",{className:"field"},a.a.createElement("label",{className:"label"},"Price for each token (dust)"),a.a.createElement("div",{className:"control"},a.a.createElement("input",{defaultValue:this.state.price,onInput:function(t){return e.setState({price:parseInt(t.target.value)})},className:"input",type:"number",min:1,step:1}))),a.a.createElement("div",{className:"field"},a.a.createElement("label",{className:"label"},"Quantity of tokens"),a.a.createElement("div",{className:"control"},a.a.createElement("input",{defaultValue:this.state.quantity,onChange:function(t){return e.setState({quantity:parseInt(t.target.value)})},className:"input",type:"number",min:1,step:1})),this.state&&this.state.price&&this.state.quantity&&this.state.title?a.a.createElement("p",null,"Total REV :"," ",i.format(this.state.price*this.state.quantity/1e8)," ",a.a.createElement("br",null),"Total dust (1 REV equals 100.000.000 dust):"," ",i.format(this.state.price*this.state.quantity)," "):void 0),a.a.createElement("div",{className:"field"},a.a.createElement("br",null),a.a.createElement("button",{className:"button is-light",disabled:!(this.state&&this.state.price&&this.state.quantity&&this.state.title),type:"button",onClick:function(t){e.state&&e.state.price&&e.state.quantity&&e.state.title&&e.props.onValuesChosen({price:e.state.price,quantity:e.state.quantity,title:encodeURI(e.state.title),description:encodeURI(e.state.description),nonce:e.props.nonce})}},"Save values and create tipping board !")))}}])&&c(t.prototype,n),r&&c(t,r),s}(a.a.Component);function m(e){return(m="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function b(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function v(e,t){return(v=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function w(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}();return function(){var n,r=E(e);if(t){var a=E(this).constructor;n=Reflect.construct(r,arguments,a)}else n=r.apply(this,arguments);return C(this,n)}}function C(e,t){return!t||"object"!==m(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function E(e){return(E=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var k=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&v(e,t)}(s,e);var t,n,r,o=w(s);function s(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,s),(t=o.call(this,e)).state={quantity:0,name:"",emoji:void 0,displayEmojis:!1},t}return t=s,(n=[{key:"render",value:function(){var e=this;console.log(this.props);var t=Object.keys(this.props.bags).sort((function(e,t){return parseInt(t)-parseInt(e)})),n=this.props.values.sold[1]===this.props.values.sold[0];return a.a.createElement("div",{className:"tip-board"},a.a.createElement("h3",{className:"title is-3"},decodeURI(this.props.values.title)),this.props.values.description&&a.a.createElement("p",{className:"description"},decodeURI(this.props.values.description)),n&&a.a.createElement("h3",{className:"title is-4"},"All tokens are sold !"),a.a.createElement("p",null,this.props.values.sold[1]," out of ",this.props.values.sold[0]," tokens sold (",Math.round(100*this.props.values.sold[1]/this.props.values.sold[0]),"%)"),a.a.createElement("p",null,this.props.values.sold[0]-this.props.values.sold[1]," tokens are for sale at a price of"," ",i.format(this.props.values.price/1e8)," REV per token"),a.a.createElement("br",null),!n&&a.a.createElement("div",{className:"contribution-form"},a.a.createElement("div",{className:"cell-form"},a.a.createElement("div",{className:"field"},a.a.createElement("label",{className:"label"},"Quantity to purchase"),a.a.createElement("div",{className:"control"},a.a.createElement("input",{defaultValue:this.state.quantity,onInput:function(t){return e.setState({quantity:parseInt(t.target.value)})},className:"input",type:"number",min:1,step:1,max:this.props.max}))),a.a.createElement("div",{className:"field"},a.a.createElement("label",{className:"label"},"Name"),a.a.createElement("div",{className:"control"},a.a.createElement("input",{defaultValue:this.state.name,onInput:function(t){return e.setState({name:t.target.value})},className:"input",type:"text"}),this.state.emoji?a.a.createElement("span",{className:"label-emoji"},this.state.emoji):void 0)),a.a.createElement("div",{className:"field"},a.a.createElement("label",{className:"label"},"Total price"),a.a.createElement("div",null,a.a.createElement("span",{className:"total-price"},a.a.createElement("b",null,i.format(this.state.quantity*this.props.values.price/1e8))," REV"),a.a.createElement("br",null),this.state.quantity*this.props.values.price<1e8&&a.a.createElement("span",{className:"total-price"},a.a.createElement("b",null,i.format(this.state.quantity*this.props.values.price))," dusts"))),a.a.createElement("div",{className:"field"},a.a.createElement("br",null),a.a.createElement("button",{className:"button is-light",disabled:!this.state.quantity,type:"button",onClick:function(t){var n={name:e.state.name};e.state.emoji&&(n.emoji=e.state.emoji),n=JSON.stringify(n),e.state.quantity&&e.props.onPurchase({quantity:e.state.quantity,data:n})}},"Tip !"))),a.a.createElement("div",{className:"field"},a.a.createElement("p",null,"You can choose an emoji to associate with your contribution"),this.state.displayEmojis?a.a.createElement("a",{className:"emoji-btn",onClick:function(){e.setState({displayEmojis:!1})},href:"#"},"Hide emojis list"):a.a.createElement("a",{className:"emoji-btn",onClick:function(){e.setState({displayEmojis:!0})},href:"#"},"Display emojis list"),this.state.displayEmojis?a.a.createElement("div",{className:"emojis-list"},a.a.createElement("span",{onClick:function(){return e.setState({emoji:void 0})}},"✕"),this.props.emojis.map((function(t,n){return a.a.createElement("span",{onClick:function(){return e.setState({emoji:t})},key:n},t)}))):void 0)),a.a.createElement("div",{className:"tips"},a.a.createElement("p",null,t.length-1," contributions :"),t.map((function(t){if("0"!==t){var n;try{n=JSON.parse(decodeURI(e.props.bagsData[t]))}catch(e){return console.log(e),a.a.createElement("p",{key:t,className:""},"Unable to parse")}return a.a.createElement("p",{key:t},a.a.createElement("b",{className:"name"},n.emoji?n.emoji+" ":"",e.props.bagsData[t]?n.name:"Anonymous")," ",a.a.createElement("span",null,"tipped"),a.a.createElement("b",{className:"amount"},i.format(e.props.bags[t].quantity*e.props.values.price/1e8)," ","REV"))}}))))}}])&&b(t.prototype,n),r&&b(t,r),s}(a.a.Component);function S(e){return(S="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function A(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function R(e,t){return(R=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function T(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}();return function(){var n,r=D(e);if(t){var a=D(this).constructor;n=Reflect.construct(r,arguments,a)}else n=r.apply(this,arguments);return N(this,n)}}function N(e,t){return!t||"object"!==S(t)&&"function"!=typeof t?_(e):t}function _(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function D(e){return(D=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function I(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var U=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&R(e,t)}(s,e);var t,n,r,i=T(s);function s(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,s),I(_(t=i.call(this,e)),"onValuesChosen",(function(e){if("undefined"!=typeof dappyRChain){var n='"0": { "publicKey": "'.concat("PUBLIC"+"_KEY".substr(0),'", "n": "0", "price": ').concat(e.price,', "quantity": ').concat(e.quantity," }"),r=blockchainUtils.generateNonce(),a=blockchainUtils.generateNonce(),i=Object(o.erc1155Term)(r,"PUBLIC"+"_KEY".substr(0)).replace("/*DEFAULT_BAGS*/",n).replace("/*OUTPUT_CHANNEL*/",'| erc1155OutputCh!({\n        "registryUri": *entryUri,\n      })'),s="\n   new entryCh, erc1155OutputCh, lookup(`rho:registry:lookup`), stdout(`rho:io:stdout`) in {\n\n     ".concat(i,' |\n\n     for (@output <- erc1155OutputCh) { \n       stdout!({\n         "quantity": ').concat(e.quantity,',\n         "price": ').concat(e.price,',\n         "title": "').concat(e.title,'",\n         "description": "').concat(e.description,'",\n         "erc1155RegistryUri": output.get("registryUri"),\n       }) |\n\n       lookup!(`rho:id:REGISTRY_URI`, *entryCh) |\n     \n       for(entry <- entryCh) {\n         entry!(\n           {\n             "type": "ADD",\n             "payload": {\n               "id": "values",\n               "file": {\n                "quantity": ').concat(e.quantity,',\n                "price": ').concat(e.price,',\n                "title": "').concat(e.title,'",\n                "description": "').concat(e.description,'",\n                 "erc1155RegistryUri": output.get("registryUri"),\n               },\n               "nonce": "').concat(a,'",\n               "signature": "SIGNATURE"\n             }\n           },\n           *stdout\n         )\n       }\n     }\n   }\n   ');dappyRChain.transaction({term:s,signatures:{SIGNATURE:e.nonce}}).then((function(e){t.setState({modal:"values-chosen"})}))}else console.warn("window.dappyRChain is undefined, cannot deploy ERC1155")})),I(_(t),"onPurchase",(function(e){dappyRChain.transaction({term:Object(o.purchaseTokensTerm)(t.props.erc1155RegistryUri.replace("rho:id:",""),"0",t.props.values.price,e.data,e.quantity,"PUBLIC"+"_KEY".substr(0),blockchainUtils.generateNonce()),signatures:{}}).then((function(e){t.setState({modal:"purchase"})}))})),t.state={modal:void 0,bags:void 0,bagsData:void 0},t}return t=s,(n=[{key:"componentDidMount",value:function(){var e=this;this.props.bags&&setInterval((function(){dappyRChain.exploreDeploys("dappy://explore-deploys",["new return,\n          entryCh,\n          lookup(`rho:registry:lookup`)\n          in {\n            lookup!(`".concat(e.props.values.erc1155RegistryUri,'`, *entryCh) |\n            for(entry <- entryCh) {\n              entry!(\n                {\n                  "type": "READ_BAGS",\n                },\n                *return\n              )\n            }\n          }'),"new return,\n          entryCh,\n          lookup(`rho:registry:lookup`)\n          in {\n            lookup!(`".concat(e.props.values.erc1155RegistryUri,'`, *entryCh) |\n            for(entry <- entryCh) {\n              entry!(\n                {\n                  "type": "READ_BAGS_DATA",\n                },\n                *return\n              )\n            }\n          }')]).then((function(t){var n=JSON.parse(t).results,r=blockchainUtils.rhoValToJs(JSON.parse(n[0].data).expr[0]),a=blockchainUtils.rhoValToJs(JSON.parse(n[1].data).expr[0]);e.setState({bags:r,bagsData:a})}))}),15e3)}},{key:"render",value:function(){var e=this;return"purchase"===this.state.modal?a.a.createElement("div",{className:"modal"},a.a.createElement("div",{className:"modal-background"}),a.a.createElement("div",{className:"modal-card"},a.a.createElement("header",{className:"modal-card-head"},a.a.createElement("p",{className:"modal-card-title"},"Purchase successful"),a.a.createElement("button",{onClick:function(){return e.setState({modal:void 0})},className:"delete","aria-label":"close"})),a.a.createElement("section",{className:"modal-card-body"},"Transaction was successfully sent. Wait few minutes, reload, and you should see your cell with the color you chose. Thank you for your participation."),a.a.createElement("footer",{className:"modal-card-foot"},a.a.createElement("button",{onClick:function(){return e.setState({modal:void 0})},class:"button"},"Ok")))):"genesis-form"===this.state.modal?a.a.createElement("div",{className:"modal"},a.a.createElement("div",{className:"modal-background"}),a.a.createElement("div",{className:"modal-card"},a.a.createElement("header",{className:"modal-card-head"},a.a.createElement("p",{className:"modal-card-title"},"Submit successful"),a.a.createElement("button",{onClick:function(){return e.setState({modal:void 0})},className:"delete","aria-label":"close"})),a.a.createElement("section",{className:"modal-card-body"},"Submit was successful, wait few minutes, reload, and the ERC-1155 contract should be initiated."),a.a.createElement("footer",{className:"modal-card-foot"},a.a.createElement("button",{onClick:function(){return e.setState({modal:void 0})},class:"button"},"Ok")))):this.props.values?a.a.createElement(k,{onPurchase:this.onPurchase,values:this.props.values,emojis:this.props.emojis,bagsData:this.state.bagsData||this.props.bagsData,max:this.props.bags[0].quantity,bags:this.state.bags||this.props.bags}):a.a.createElement(g,{onValuesChosen:this.onValuesChosen,nonce:this.props.nonce})}}])&&A(t.prototype,n),r&&A(t,r),s}(a.a.Component)},function(e,t,n){"use strict";n.r(t),function(e,t){var r=n(0),a=n.n(r),o=n(1),i=n.n(o),s=n(3);function u(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?u(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):u(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var h=void 0;document.addEventListener("DOMContentLoaded",(function(){"undefined"!=typeof dappyRChain&&(h=window.dappy.address.includes("deltanetwork")?"stsfzhdxwmma94jrcg3debsjyho615nbagz3jwzwt3x4oa9pwkorzc.index":"wo5icxdekdtapssxx5bx4jbfu6cn689spf4gjserzcw6mga9p8itdk.index",dappyRChain.fetch("dappy://REGISTRY_URI").then((function(n){var r=JSON.parse(n).expr[0],o=blockchainUtils.rhoValToJs(r);console.log(o),o.files.values?dappyRChain.exploreDeploys("dappy://explore-deploys",["new return,\n                fileCh,\n                fileCh,\n                filesModuleCh,\n                lookup(`rho:registry:lookup`) in {\n                  lookup!(`".concat(o.files.values,"`, *fileCh) |\n                  for(file <- fileCh) {\n                    return!(*file)\n                  }\n              }"),"new return, entryCh, lookup(`rho:registry:lookup`), stdout(`rho:io:stdout`) in {\n\n                lookup!(`rho:id:".concat(h.split(".")[0],'`, *entryCh) |\n      \n                for(entry <- entryCh) {\n                  new x in {\n                    entry!({ "type": "READ" }, *x) |\n                    for (y <- x) {\n                      new z in {\n                        lookup!(*y.get("files").get("').concat(h.split(".")[1],'"), *z) |\n                        for (value <- z) {\n                          return!(*value)\n                        }\n                      }\n                    }\n                  }\n                }\n              }')]).then((function(n){var r,o=JSON.parse(n).results,u=blockchainUtils.rhoValToJs(JSON.parse(o[0].data).expr[0]),l=blockchainUtils.rhoValToJs(JSON.parse(o[1].data).expr[0]);try{r=e.from(l,"base64")}catch(e){log("failed to retreive string from rholang process (.data.expr.ExprString.data), raw value :"),t.exit()}var h=e.from(pako.inflate(r)).toString("utf-8"),f=JSON.parse(h),p=e.from(f.data,"base64").toString("utf-8");p=JSON.parse(p).emojis,console.log(p),console.log("files-module .values file retrieved with explore-deploy :"),console.log(u),dappyRChain.exploreDeploys("dappy://explore-deploys",["new return,\n                  entryCh,\n                  lookup(`rho:registry:lookup`)\n                  in {\n                    lookup!(`".concat(u.erc1155RegistryUri,'`, *entryCh) |\n                    for(entry <- entryCh) {\n                      entry!(\n                        {\n                          "type": "READ_BAGS",\n                        },\n                        *return\n                      )\n                    }\n                  }'),"new return,\n                  entryCh,\n                  lookup(`rho:registry:lookup`)\n                  in {\n                    lookup!(`".concat(u.erc1155RegistryUri,'`, *entryCh) |\n                    for(entry <- entryCh) {\n                      entry!(\n                        {\n                          "type": "READ_BAGS_DATA",\n                        },\n                        *return\n                      )\n                    }\n                  }')]).then((function(e){var t=JSON.parse(e).results,n=blockchainUtils.rhoValToJs(JSON.parse(t[0].data).expr[0]);console.log("ERC-1155 bags retrieved with explore-deploy :"),console.log(n);var r=0;Object.keys(n).forEach((function(e){"0"!==e&&(r+=n[e].quantity)}));var o=n[0].quantity+r,l=blockchainUtils.rhoValToJs(JSON.parse(t[1].data).expr[0]);console.log("ERC-1155 bagsData retrieved with explore-deploy :"),console.log(l),console.log("sold",[o,r]),document.title=decodeURI(u.title),document.getElementById("root").setAttribute("class","loaded"),i.a.render(a.a.createElement(s.a,{values:c(c({},u),{},{sold:[o,r]}),bags:n,bagsData:l,emojis:p,erc1155RegistryUri:u.erc1155RegistryUri}),document.getElementById("root"))}))})):(document.getElementById("root").setAttribute("class","loaded"),i.a.render(a.a.createElement(s.a,{nonce:o.nonce,values:void 0,bags:void 0,bagsData:void 0}),document.getElementById("root")))})).catch((function(e){console.error("Something went wrong when retreiving the files module object"),console.log(e)})))}))}.call(this,n(5).Buffer,n(10))},function(e,t,n){"use strict";(function(e){
/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <http://feross.org>
 * @license  MIT
 */
var r=n(7),a=n(8),o=n(9);function i(){return u.TYPED_ARRAY_SUPPORT?2147483647:1073741823}function s(e,t){if(i()<t)throw new RangeError("Invalid typed array length");return u.TYPED_ARRAY_SUPPORT?(e=new Uint8Array(t)).__proto__=u.prototype:(null===e&&(e=new u(t)),e.length=t),e}function u(e,t,n){if(!(u.TYPED_ARRAY_SUPPORT||this instanceof u))return new u(e,t,n);if("number"==typeof e){if("string"==typeof t)throw new Error("If encoding is specified then the first argument must be a string");return h(this,e)}return c(this,e,t,n)}function c(e,t,n,r){if("number"==typeof t)throw new TypeError('"value" argument must not be a number');return"undefined"!=typeof ArrayBuffer&&t instanceof ArrayBuffer?function(e,t,n,r){if(t.byteLength,n<0||t.byteLength<n)throw new RangeError("'offset' is out of bounds");if(t.byteLength<n+(r||0))throw new RangeError("'length' is out of bounds");t=void 0===n&&void 0===r?new Uint8Array(t):void 0===r?new Uint8Array(t,n):new Uint8Array(t,n,r);u.TYPED_ARRAY_SUPPORT?(e=t).__proto__=u.prototype:e=f(e,t);return e}(e,t,n,r):"string"==typeof t?function(e,t,n){"string"==typeof n&&""!==n||(n="utf8");if(!u.isEncoding(n))throw new TypeError('"encoding" must be a valid string encoding');var r=0|d(t,n),a=(e=s(e,r)).write(t,n);a!==r&&(e=e.slice(0,a));return e}(e,t,n):function(e,t){if(u.isBuffer(t)){var n=0|p(t.length);return 0===(e=s(e,n)).length||t.copy(e,0,0,n),e}if(t){if("undefined"!=typeof ArrayBuffer&&t.buffer instanceof ArrayBuffer||"length"in t)return"number"!=typeof t.length||(r=t.length)!=r?s(e,0):f(e,t);if("Buffer"===t.type&&o(t.data))return f(e,t.data)}var r;throw new TypeError("First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.")}(e,t)}function l(e){if("number"!=typeof e)throw new TypeError('"size" argument must be a number');if(e<0)throw new RangeError('"size" argument must not be negative')}function h(e,t){if(l(t),e=s(e,t<0?0:0|p(t)),!u.TYPED_ARRAY_SUPPORT)for(var n=0;n<t;++n)e[n]=0;return e}function f(e,t){var n=t.length<0?0:0|p(t.length);e=s(e,n);for(var r=0;r<n;r+=1)e[r]=255&t[r];return e}function p(e){if(e>=i())throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+i().toString(16)+" bytes");return 0|e}function d(e,t){if(u.isBuffer(e))return e.length;if("undefined"!=typeof ArrayBuffer&&"function"==typeof ArrayBuffer.isView&&(ArrayBuffer.isView(e)||e instanceof ArrayBuffer))return e.byteLength;"string"!=typeof e&&(e=""+e);var n=e.length;if(0===n)return 0;for(var r=!1;;)switch(t){case"ascii":case"latin1":case"binary":return n;case"utf8":case"utf-8":case void 0:return K(e).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return 2*n;case"hex":return n>>>1;case"base64":return L(e).length;default:if(r)return K(e).length;t=(""+t).toLowerCase(),r=!0}}function y(e,t,n){var r=!1;if((void 0===t||t<0)&&(t=0),t>this.length)return"";if((void 0===n||n>this.length)&&(n=this.length),n<=0)return"";if((n>>>=0)<=(t>>>=0))return"";for(e||(e="utf8");;)switch(e){case"hex":return _(this,t,n);case"utf8":case"utf-8":return R(this,t,n);case"ascii":return T(this,t,n);case"latin1":case"binary":return N(this,t,n);case"base64":return A(this,t,n);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return D(this,t,n);default:if(r)throw new TypeError("Unknown encoding: "+e);e=(e+"").toLowerCase(),r=!0}}function g(e,t,n){var r=e[t];e[t]=e[n],e[n]=r}function m(e,t,n,r,a){if(0===e.length)return-1;if("string"==typeof n?(r=n,n=0):n>2147483647?n=2147483647:n<-2147483648&&(n=-2147483648),n=+n,isNaN(n)&&(n=a?0:e.length-1),n<0&&(n=e.length+n),n>=e.length){if(a)return-1;n=e.length-1}else if(n<0){if(!a)return-1;n=0}if("string"==typeof t&&(t=u.from(t,r)),u.isBuffer(t))return 0===t.length?-1:b(e,t,n,r,a);if("number"==typeof t)return t&=255,u.TYPED_ARRAY_SUPPORT&&"function"==typeof Uint8Array.prototype.indexOf?a?Uint8Array.prototype.indexOf.call(e,t,n):Uint8Array.prototype.lastIndexOf.call(e,t,n):b(e,[t],n,r,a);throw new TypeError("val must be string, number or Buffer")}function b(e,t,n,r,a){var o,i=1,s=e.length,u=t.length;if(void 0!==r&&("ucs2"===(r=String(r).toLowerCase())||"ucs-2"===r||"utf16le"===r||"utf-16le"===r)){if(e.length<2||t.length<2)return-1;i=2,s/=2,u/=2,n/=2}function c(e,t){return 1===i?e[t]:e.readUInt16BE(t*i)}if(a){var l=-1;for(o=n;o<s;o++)if(c(e,o)===c(t,-1===l?0:o-l)){if(-1===l&&(l=o),o-l+1===u)return l*i}else-1!==l&&(o-=o-l),l=-1}else for(n+u>s&&(n=s-u),o=n;o>=0;o--){for(var h=!0,f=0;f<u;f++)if(c(e,o+f)!==c(t,f)){h=!1;break}if(h)return o}return-1}function v(e,t,n,r){n=Number(n)||0;var a=e.length-n;r?(r=Number(r))>a&&(r=a):r=a;var o=t.length;if(o%2!=0)throw new TypeError("Invalid hex string");r>o/2&&(r=o/2);for(var i=0;i<r;++i){var s=parseInt(t.substr(2*i,2),16);if(isNaN(s))return i;e[n+i]=s}return i}function w(e,t,n,r){return Y(K(t,e.length-n),e,n,r)}function C(e,t,n,r){return Y(function(e){for(var t=[],n=0;n<e.length;++n)t.push(255&e.charCodeAt(n));return t}(t),e,n,r)}function E(e,t,n,r){return C(e,t,n,r)}function k(e,t,n,r){return Y(L(t),e,n,r)}function S(e,t,n,r){return Y(function(e,t){for(var n,r,a,o=[],i=0;i<e.length&&!((t-=2)<0);++i)n=e.charCodeAt(i),r=n>>8,a=n%256,o.push(a),o.push(r);return o}(t,e.length-n),e,n,r)}function A(e,t,n){return 0===t&&n===e.length?r.fromByteArray(e):r.fromByteArray(e.slice(t,n))}function R(e,t,n){n=Math.min(e.length,n);for(var r=[],a=t;a<n;){var o,i,s,u,c=e[a],l=null,h=c>239?4:c>223?3:c>191?2:1;if(a+h<=n)switch(h){case 1:c<128&&(l=c);break;case 2:128==(192&(o=e[a+1]))&&(u=(31&c)<<6|63&o)>127&&(l=u);break;case 3:o=e[a+1],i=e[a+2],128==(192&o)&&128==(192&i)&&(u=(15&c)<<12|(63&o)<<6|63&i)>2047&&(u<55296||u>57343)&&(l=u);break;case 4:o=e[a+1],i=e[a+2],s=e[a+3],128==(192&o)&&128==(192&i)&&128==(192&s)&&(u=(15&c)<<18|(63&o)<<12|(63&i)<<6|63&s)>65535&&u<1114112&&(l=u)}null===l?(l=65533,h=1):l>65535&&(l-=65536,r.push(l>>>10&1023|55296),l=56320|1023&l),r.push(l),a+=h}return function(e){var t=e.length;if(t<=4096)return String.fromCharCode.apply(String,e);var n="",r=0;for(;r<t;)n+=String.fromCharCode.apply(String,e.slice(r,r+=4096));return n}(r)}t.Buffer=u,t.SlowBuffer=function(e){+e!=e&&(e=0);return u.alloc(+e)},t.INSPECT_MAX_BYTES=50,u.TYPED_ARRAY_SUPPORT=void 0!==e.TYPED_ARRAY_SUPPORT?e.TYPED_ARRAY_SUPPORT:function(){try{var e=new Uint8Array(1);return e.__proto__={__proto__:Uint8Array.prototype,foo:function(){return 42}},42===e.foo()&&"function"==typeof e.subarray&&0===e.subarray(1,1).byteLength}catch(e){return!1}}(),t.kMaxLength=i(),u.poolSize=8192,u._augment=function(e){return e.__proto__=u.prototype,e},u.from=function(e,t,n){return c(null,e,t,n)},u.TYPED_ARRAY_SUPPORT&&(u.prototype.__proto__=Uint8Array.prototype,u.__proto__=Uint8Array,"undefined"!=typeof Symbol&&Symbol.species&&u[Symbol.species]===u&&Object.defineProperty(u,Symbol.species,{value:null,configurable:!0})),u.alloc=function(e,t,n){return function(e,t,n,r){return l(t),t<=0?s(e,t):void 0!==n?"string"==typeof r?s(e,t).fill(n,r):s(e,t).fill(n):s(e,t)}(null,e,t,n)},u.allocUnsafe=function(e){return h(null,e)},u.allocUnsafeSlow=function(e){return h(null,e)},u.isBuffer=function(e){return!(null==e||!e._isBuffer)},u.compare=function(e,t){if(!u.isBuffer(e)||!u.isBuffer(t))throw new TypeError("Arguments must be Buffers");if(e===t)return 0;for(var n=e.length,r=t.length,a=0,o=Math.min(n,r);a<o;++a)if(e[a]!==t[a]){n=e[a],r=t[a];break}return n<r?-1:r<n?1:0},u.isEncoding=function(e){switch(String(e).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},u.concat=function(e,t){if(!o(e))throw new TypeError('"list" argument must be an Array of Buffers');if(0===e.length)return u.alloc(0);var n;if(void 0===t)for(t=0,n=0;n<e.length;++n)t+=e[n].length;var r=u.allocUnsafe(t),a=0;for(n=0;n<e.length;++n){var i=e[n];if(!u.isBuffer(i))throw new TypeError('"list" argument must be an Array of Buffers');i.copy(r,a),a+=i.length}return r},u.byteLength=d,u.prototype._isBuffer=!0,u.prototype.swap16=function(){var e=this.length;if(e%2!=0)throw new RangeError("Buffer size must be a multiple of 16-bits");for(var t=0;t<e;t+=2)g(this,t,t+1);return this},u.prototype.swap32=function(){var e=this.length;if(e%4!=0)throw new RangeError("Buffer size must be a multiple of 32-bits");for(var t=0;t<e;t+=4)g(this,t,t+3),g(this,t+1,t+2);return this},u.prototype.swap64=function(){var e=this.length;if(e%8!=0)throw new RangeError("Buffer size must be a multiple of 64-bits");for(var t=0;t<e;t+=8)g(this,t,t+7),g(this,t+1,t+6),g(this,t+2,t+5),g(this,t+3,t+4);return this},u.prototype.toString=function(){var e=0|this.length;return 0===e?"":0===arguments.length?R(this,0,e):y.apply(this,arguments)},u.prototype.equals=function(e){if(!u.isBuffer(e))throw new TypeError("Argument must be a Buffer");return this===e||0===u.compare(this,e)},u.prototype.inspect=function(){var e="",n=t.INSPECT_MAX_BYTES;return this.length>0&&(e=this.toString("hex",0,n).match(/.{2}/g).join(" "),this.length>n&&(e+=" ... ")),"<Buffer "+e+">"},u.prototype.compare=function(e,t,n,r,a){if(!u.isBuffer(e))throw new TypeError("Argument must be a Buffer");if(void 0===t&&(t=0),void 0===n&&(n=e?e.length:0),void 0===r&&(r=0),void 0===a&&(a=this.length),t<0||n>e.length||r<0||a>this.length)throw new RangeError("out of range index");if(r>=a&&t>=n)return 0;if(r>=a)return-1;if(t>=n)return 1;if(this===e)return 0;for(var o=(a>>>=0)-(r>>>=0),i=(n>>>=0)-(t>>>=0),s=Math.min(o,i),c=this.slice(r,a),l=e.slice(t,n),h=0;h<s;++h)if(c[h]!==l[h]){o=c[h],i=l[h];break}return o<i?-1:i<o?1:0},u.prototype.includes=function(e,t,n){return-1!==this.indexOf(e,t,n)},u.prototype.indexOf=function(e,t,n){return m(this,e,t,n,!0)},u.prototype.lastIndexOf=function(e,t,n){return m(this,e,t,n,!1)},u.prototype.write=function(e,t,n,r){if(void 0===t)r="utf8",n=this.length,t=0;else if(void 0===n&&"string"==typeof t)r=t,n=this.length,t=0;else{if(!isFinite(t))throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");t|=0,isFinite(n)?(n|=0,void 0===r&&(r="utf8")):(r=n,n=void 0)}var a=this.length-t;if((void 0===n||n>a)&&(n=a),e.length>0&&(n<0||t<0)||t>this.length)throw new RangeError("Attempt to write outside buffer bounds");r||(r="utf8");for(var o=!1;;)switch(r){case"hex":return v(this,e,t,n);case"utf8":case"utf-8":return w(this,e,t,n);case"ascii":return C(this,e,t,n);case"latin1":case"binary":return E(this,e,t,n);case"base64":return k(this,e,t,n);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return S(this,e,t,n);default:if(o)throw new TypeError("Unknown encoding: "+r);r=(""+r).toLowerCase(),o=!0}},u.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}};function T(e,t,n){var r="";n=Math.min(e.length,n);for(var a=t;a<n;++a)r+=String.fromCharCode(127&e[a]);return r}function N(e,t,n){var r="";n=Math.min(e.length,n);for(var a=t;a<n;++a)r+=String.fromCharCode(e[a]);return r}function _(e,t,n){var r=e.length;(!t||t<0)&&(t=0),(!n||n<0||n>r)&&(n=r);for(var a="",o=t;o<n;++o)a+=V(e[o]);return a}function D(e,t,n){for(var r=e.slice(t,n),a="",o=0;o<r.length;o+=2)a+=String.fromCharCode(r[o]+256*r[o+1]);return a}function I(e,t,n){if(e%1!=0||e<0)throw new RangeError("offset is not uint");if(e+t>n)throw new RangeError("Trying to access beyond buffer length")}function U(e,t,n,r,a,o){if(!u.isBuffer(e))throw new TypeError('"buffer" argument must be a Buffer instance');if(t>a||t<o)throw new RangeError('"value" argument is out of bounds');if(n+r>e.length)throw new RangeError("Index out of range")}function O(e,t,n,r){t<0&&(t=65535+t+1);for(var a=0,o=Math.min(e.length-n,2);a<o;++a)e[n+a]=(t&255<<8*(r?a:1-a))>>>8*(r?a:1-a)}function P(e,t,n,r){t<0&&(t=4294967295+t+1);for(var a=0,o=Math.min(e.length-n,4);a<o;++a)e[n+a]=t>>>8*(r?a:3-a)&255}function B(e,t,n,r,a,o){if(n+r>e.length)throw new RangeError("Index out of range");if(n<0)throw new RangeError("Index out of range")}function j(e,t,n,r,o){return o||B(e,0,n,4),a.write(e,t,n,r,23,4),n+4}function x(e,t,n,r,o){return o||B(e,0,n,8),a.write(e,t,n,r,52,8),n+8}u.prototype.slice=function(e,t){var n,r=this.length;if((e=~~e)<0?(e+=r)<0&&(e=0):e>r&&(e=r),(t=void 0===t?r:~~t)<0?(t+=r)<0&&(t=0):t>r&&(t=r),t<e&&(t=e),u.TYPED_ARRAY_SUPPORT)(n=this.subarray(e,t)).__proto__=u.prototype;else{var a=t-e;n=new u(a,void 0);for(var o=0;o<a;++o)n[o]=this[o+e]}return n},u.prototype.readUIntLE=function(e,t,n){e|=0,t|=0,n||I(e,t,this.length);for(var r=this[e],a=1,o=0;++o<t&&(a*=256);)r+=this[e+o]*a;return r},u.prototype.readUIntBE=function(e,t,n){e|=0,t|=0,n||I(e,t,this.length);for(var r=this[e+--t],a=1;t>0&&(a*=256);)r+=this[e+--t]*a;return r},u.prototype.readUInt8=function(e,t){return t||I(e,1,this.length),this[e]},u.prototype.readUInt16LE=function(e,t){return t||I(e,2,this.length),this[e]|this[e+1]<<8},u.prototype.readUInt16BE=function(e,t){return t||I(e,2,this.length),this[e]<<8|this[e+1]},u.prototype.readUInt32LE=function(e,t){return t||I(e,4,this.length),(this[e]|this[e+1]<<8|this[e+2]<<16)+16777216*this[e+3]},u.prototype.readUInt32BE=function(e,t){return t||I(e,4,this.length),16777216*this[e]+(this[e+1]<<16|this[e+2]<<8|this[e+3])},u.prototype.readIntLE=function(e,t,n){e|=0,t|=0,n||I(e,t,this.length);for(var r=this[e],a=1,o=0;++o<t&&(a*=256);)r+=this[e+o]*a;return r>=(a*=128)&&(r-=Math.pow(2,8*t)),r},u.prototype.readIntBE=function(e,t,n){e|=0,t|=0,n||I(e,t,this.length);for(var r=t,a=1,o=this[e+--r];r>0&&(a*=256);)o+=this[e+--r]*a;return o>=(a*=128)&&(o-=Math.pow(2,8*t)),o},u.prototype.readInt8=function(e,t){return t||I(e,1,this.length),128&this[e]?-1*(255-this[e]+1):this[e]},u.prototype.readInt16LE=function(e,t){t||I(e,2,this.length);var n=this[e]|this[e+1]<<8;return 32768&n?4294901760|n:n},u.prototype.readInt16BE=function(e,t){t||I(e,2,this.length);var n=this[e+1]|this[e]<<8;return 32768&n?4294901760|n:n},u.prototype.readInt32LE=function(e,t){return t||I(e,4,this.length),this[e]|this[e+1]<<8|this[e+2]<<16|this[e+3]<<24},u.prototype.readInt32BE=function(e,t){return t||I(e,4,this.length),this[e]<<24|this[e+1]<<16|this[e+2]<<8|this[e+3]},u.prototype.readFloatLE=function(e,t){return t||I(e,4,this.length),a.read(this,e,!0,23,4)},u.prototype.readFloatBE=function(e,t){return t||I(e,4,this.length),a.read(this,e,!1,23,4)},u.prototype.readDoubleLE=function(e,t){return t||I(e,8,this.length),a.read(this,e,!0,52,8)},u.prototype.readDoubleBE=function(e,t){return t||I(e,8,this.length),a.read(this,e,!1,52,8)},u.prototype.writeUIntLE=function(e,t,n,r){(e=+e,t|=0,n|=0,r)||U(this,e,t,n,Math.pow(2,8*n)-1,0);var a=1,o=0;for(this[t]=255&e;++o<n&&(a*=256);)this[t+o]=e/a&255;return t+n},u.prototype.writeUIntBE=function(e,t,n,r){(e=+e,t|=0,n|=0,r)||U(this,e,t,n,Math.pow(2,8*n)-1,0);var a=n-1,o=1;for(this[t+a]=255&e;--a>=0&&(o*=256);)this[t+a]=e/o&255;return t+n},u.prototype.writeUInt8=function(e,t,n){return e=+e,t|=0,n||U(this,e,t,1,255,0),u.TYPED_ARRAY_SUPPORT||(e=Math.floor(e)),this[t]=255&e,t+1},u.prototype.writeUInt16LE=function(e,t,n){return e=+e,t|=0,n||U(this,e,t,2,65535,0),u.TYPED_ARRAY_SUPPORT?(this[t]=255&e,this[t+1]=e>>>8):O(this,e,t,!0),t+2},u.prototype.writeUInt16BE=function(e,t,n){return e=+e,t|=0,n||U(this,e,t,2,65535,0),u.TYPED_ARRAY_SUPPORT?(this[t]=e>>>8,this[t+1]=255&e):O(this,e,t,!1),t+2},u.prototype.writeUInt32LE=function(e,t,n){return e=+e,t|=0,n||U(this,e,t,4,4294967295,0),u.TYPED_ARRAY_SUPPORT?(this[t+3]=e>>>24,this[t+2]=e>>>16,this[t+1]=e>>>8,this[t]=255&e):P(this,e,t,!0),t+4},u.prototype.writeUInt32BE=function(e,t,n){return e=+e,t|=0,n||U(this,e,t,4,4294967295,0),u.TYPED_ARRAY_SUPPORT?(this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e):P(this,e,t,!1),t+4},u.prototype.writeIntLE=function(e,t,n,r){if(e=+e,t|=0,!r){var a=Math.pow(2,8*n-1);U(this,e,t,n,a-1,-a)}var o=0,i=1,s=0;for(this[t]=255&e;++o<n&&(i*=256);)e<0&&0===s&&0!==this[t+o-1]&&(s=1),this[t+o]=(e/i>>0)-s&255;return t+n},u.prototype.writeIntBE=function(e,t,n,r){if(e=+e,t|=0,!r){var a=Math.pow(2,8*n-1);U(this,e,t,n,a-1,-a)}var o=n-1,i=1,s=0;for(this[t+o]=255&e;--o>=0&&(i*=256);)e<0&&0===s&&0!==this[t+o+1]&&(s=1),this[t+o]=(e/i>>0)-s&255;return t+n},u.prototype.writeInt8=function(e,t,n){return e=+e,t|=0,n||U(this,e,t,1,127,-128),u.TYPED_ARRAY_SUPPORT||(e=Math.floor(e)),e<0&&(e=255+e+1),this[t]=255&e,t+1},u.prototype.writeInt16LE=function(e,t,n){return e=+e,t|=0,n||U(this,e,t,2,32767,-32768),u.TYPED_ARRAY_SUPPORT?(this[t]=255&e,this[t+1]=e>>>8):O(this,e,t,!0),t+2},u.prototype.writeInt16BE=function(e,t,n){return e=+e,t|=0,n||U(this,e,t,2,32767,-32768),u.TYPED_ARRAY_SUPPORT?(this[t]=e>>>8,this[t+1]=255&e):O(this,e,t,!1),t+2},u.prototype.writeInt32LE=function(e,t,n){return e=+e,t|=0,n||U(this,e,t,4,2147483647,-2147483648),u.TYPED_ARRAY_SUPPORT?(this[t]=255&e,this[t+1]=e>>>8,this[t+2]=e>>>16,this[t+3]=e>>>24):P(this,e,t,!0),t+4},u.prototype.writeInt32BE=function(e,t,n){return e=+e,t|=0,n||U(this,e,t,4,2147483647,-2147483648),e<0&&(e=4294967295+e+1),u.TYPED_ARRAY_SUPPORT?(this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e):P(this,e,t,!1),t+4},u.prototype.writeFloatLE=function(e,t,n){return j(this,e,t,!0,n)},u.prototype.writeFloatBE=function(e,t,n){return j(this,e,t,!1,n)},u.prototype.writeDoubleLE=function(e,t,n){return x(this,e,t,!0,n)},u.prototype.writeDoubleBE=function(e,t,n){return x(this,e,t,!1,n)},u.prototype.copy=function(e,t,n,r){if(n||(n=0),r||0===r||(r=this.length),t>=e.length&&(t=e.length),t||(t=0),r>0&&r<n&&(r=n),r===n)return 0;if(0===e.length||0===this.length)return 0;if(t<0)throw new RangeError("targetStart out of bounds");if(n<0||n>=this.length)throw new RangeError("sourceStart out of bounds");if(r<0)throw new RangeError("sourceEnd out of bounds");r>this.length&&(r=this.length),e.length-t<r-n&&(r=e.length-t+n);var a,o=r-n;if(this===e&&n<t&&t<r)for(a=o-1;a>=0;--a)e[a+t]=this[a+n];else if(o<1e3||!u.TYPED_ARRAY_SUPPORT)for(a=0;a<o;++a)e[a+t]=this[a+n];else Uint8Array.prototype.set.call(e,this.subarray(n,n+o),t);return o},u.prototype.fill=function(e,t,n,r){if("string"==typeof e){if("string"==typeof t?(r=t,t=0,n=this.length):"string"==typeof n&&(r=n,n=this.length),1===e.length){var a=e.charCodeAt(0);a<256&&(e=a)}if(void 0!==r&&"string"!=typeof r)throw new TypeError("encoding must be a string");if("string"==typeof r&&!u.isEncoding(r))throw new TypeError("Unknown encoding: "+r)}else"number"==typeof e&&(e&=255);if(t<0||this.length<t||this.length<n)throw new RangeError("Out of range index");if(n<=t)return this;var o;if(t>>>=0,n=void 0===n?this.length:n>>>0,e||(e=0),"number"==typeof e)for(o=t;o<n;++o)this[o]=e;else{var i=u.isBuffer(e)?e:K(new u(e,r).toString()),s=i.length;for(o=0;o<n-t;++o)this[o+t]=i[o%s]}return this};var q=/[^+\/0-9A-Za-z-_]/g;function V(e){return e<16?"0"+e.toString(16):e.toString(16)}function K(e,t){var n;t=t||1/0;for(var r=e.length,a=null,o=[],i=0;i<r;++i){if((n=e.charCodeAt(i))>55295&&n<57344){if(!a){if(n>56319){(t-=3)>-1&&o.push(239,191,189);continue}if(i+1===r){(t-=3)>-1&&o.push(239,191,189);continue}a=n;continue}if(n<56320){(t-=3)>-1&&o.push(239,191,189),a=n;continue}n=65536+(a-55296<<10|n-56320)}else a&&(t-=3)>-1&&o.push(239,191,189);if(a=null,n<128){if((t-=1)<0)break;o.push(n)}else if(n<2048){if((t-=2)<0)break;o.push(n>>6|192,63&n|128)}else if(n<65536){if((t-=3)<0)break;o.push(n>>12|224,n>>6&63|128,63&n|128)}else{if(!(n<1114112))throw new Error("Invalid code point");if((t-=4)<0)break;o.push(n>>18|240,n>>12&63|128,n>>6&63|128,63&n|128)}}return o}function L(e){return r.toByteArray(function(e){if((e=function(e){return e.trim?e.trim():e.replace(/^\s+|\s+$/g,"")}(e).replace(q,"")).length<2)return"";for(;e.length%4!=0;)e+="=";return e}(e))}function Y(e,t,n,r){for(var a=0;a<r&&!(a+n>=t.length||a>=e.length);++a)t[a+n]=e[a];return a}}).call(this,n(6))},function(e,t){var n;n=function(){return this}();try{n=n||new Function("return this")()}catch(e){"object"==typeof window&&(n=window)}e.exports=n},function(e,t,n){"use strict";t.byteLength=function(e){var t=c(e),n=t[0],r=t[1];return 3*(n+r)/4-r},t.toByteArray=function(e){var t,n,r=c(e),i=r[0],s=r[1],u=new o(function(e,t,n){return 3*(t+n)/4-n}(0,i,s)),l=0,h=s>0?i-4:i;for(n=0;n<h;n+=4)t=a[e.charCodeAt(n)]<<18|a[e.charCodeAt(n+1)]<<12|a[e.charCodeAt(n+2)]<<6|a[e.charCodeAt(n+3)],u[l++]=t>>16&255,u[l++]=t>>8&255,u[l++]=255&t;2===s&&(t=a[e.charCodeAt(n)]<<2|a[e.charCodeAt(n+1)]>>4,u[l++]=255&t);1===s&&(t=a[e.charCodeAt(n)]<<10|a[e.charCodeAt(n+1)]<<4|a[e.charCodeAt(n+2)]>>2,u[l++]=t>>8&255,u[l++]=255&t);return u},t.fromByteArray=function(e){for(var t,n=e.length,a=n%3,o=[],i=0,s=n-a;i<s;i+=16383)o.push(l(e,i,i+16383>s?s:i+16383));1===a?(t=e[n-1],o.push(r[t>>2]+r[t<<4&63]+"==")):2===a&&(t=(e[n-2]<<8)+e[n-1],o.push(r[t>>10]+r[t>>4&63]+r[t<<2&63]+"="));return o.join("")};for(var r=[],a=[],o="undefined"!=typeof Uint8Array?Uint8Array:Array,i="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",s=0,u=i.length;s<u;++s)r[s]=i[s],a[i.charCodeAt(s)]=s;function c(e){var t=e.length;if(t%4>0)throw new Error("Invalid string. Length must be a multiple of 4");var n=e.indexOf("=");return-1===n&&(n=t),[n,n===t?0:4-n%4]}function l(e,t,n){for(var a,o,i=[],s=t;s<n;s+=3)a=(e[s]<<16&16711680)+(e[s+1]<<8&65280)+(255&e[s+2]),i.push(r[(o=a)>>18&63]+r[o>>12&63]+r[o>>6&63]+r[63&o]);return i.join("")}a["-".charCodeAt(0)]=62,a["_".charCodeAt(0)]=63},function(e,t){t.read=function(e,t,n,r,a){var o,i,s=8*a-r-1,u=(1<<s)-1,c=u>>1,l=-7,h=n?a-1:0,f=n?-1:1,p=e[t+h];for(h+=f,o=p&(1<<-l)-1,p>>=-l,l+=s;l>0;o=256*o+e[t+h],h+=f,l-=8);for(i=o&(1<<-l)-1,o>>=-l,l+=r;l>0;i=256*i+e[t+h],h+=f,l-=8);if(0===o)o=1-c;else{if(o===u)return i?NaN:1/0*(p?-1:1);i+=Math.pow(2,r),o-=c}return(p?-1:1)*i*Math.pow(2,o-r)},t.write=function(e,t,n,r,a,o){var i,s,u,c=8*o-a-1,l=(1<<c)-1,h=l>>1,f=23===a?Math.pow(2,-24)-Math.pow(2,-77):0,p=r?0:o-1,d=r?1:-1,y=t<0||0===t&&1/t<0?1:0;for(t=Math.abs(t),isNaN(t)||t===1/0?(s=isNaN(t)?1:0,i=l):(i=Math.floor(Math.log(t)/Math.LN2),t*(u=Math.pow(2,-i))<1&&(i--,u*=2),(t+=i+h>=1?f/u:f*Math.pow(2,1-h))*u>=2&&(i++,u/=2),i+h>=l?(s=0,i=l):i+h>=1?(s=(t*u-1)*Math.pow(2,a),i+=h):(s=t*Math.pow(2,h-1)*Math.pow(2,a),i=0));a>=8;e[n+p]=255&s,p+=d,s/=256,a-=8);for(i=i<<a|s,c+=a;c>0;e[n+p]=255&i,p+=d,i/=256,c-=8);e[n+p-d]|=128*y}},function(e,t){var n={}.toString;e.exports=Array.isArray||function(e){return"[object Array]"==n.call(e)}},function(e,t){var n,r,a=e.exports={};function o(){throw new Error("setTimeout has not been defined")}function i(){throw new Error("clearTimeout has not been defined")}function s(e){if(n===setTimeout)return setTimeout(e,0);if((n===o||!n)&&setTimeout)return n=setTimeout,setTimeout(e,0);try{return n(e,0)}catch(t){try{return n.call(null,e,0)}catch(t){return n.call(this,e,0)}}}!function(){try{n="function"==typeof setTimeout?setTimeout:o}catch(e){n=o}try{r="function"==typeof clearTimeout?clearTimeout:i}catch(e){r=i}}();var u,c=[],l=!1,h=-1;function f(){l&&u&&(l=!1,u.length?c=u.concat(c):h=-1,c.length&&p())}function p(){if(!l){var e=s(f);l=!0;for(var t=c.length;t;){for(u=c,c=[];++h<t;)u&&u[h].run();h=-1,t=c.length}u=null,l=!1,function(e){if(r===clearTimeout)return clearTimeout(e);if((r===i||!r)&&clearTimeout)return r=clearTimeout,clearTimeout(e);try{r(e)}catch(t){try{return r.call(null,e)}catch(t){return r.call(this,e)}}}(e)}}function d(e,t){this.fun=e,this.array=t}function y(){}a.nextTick=function(e){var t=new Array(arguments.length-1);if(arguments.length>1)for(var n=1;n<arguments.length;n++)t[n-1]=arguments[n];c.push(new d(e,t)),1!==c.length||l||s(p)},d.prototype.run=function(){this.fun.apply(null,this.array)},a.title="browser",a.browser=!0,a.env={},a.argv=[],a.version="",a.versions={},a.on=y,a.addListener=y,a.once=y,a.off=y,a.removeListener=y,a.removeAllListeners=y,a.emit=y,a.prependListener=y,a.prependOnceListener=y,a.listeners=function(e){return[]},a.binding=function(e){throw new Error("process.binding is not supported")},a.cwd=function(){return"/"},a.chdir=function(e){throw new Error("process.chdir is not supported")},a.umask=function(){return 0}},function(e,t){e.exports.erc1155Term=(e,t)=>`new \n  mainCh,\n  createCh,\n  purchaseCh,\n  sendCh,\n  entryCh,\n  entryUriCh,\n  setLockedCh,\n  updateTokenDataCh,\n  updateBagDataCh,\n  updateUriCh,\n  bags,\n  bagsData,\n  tokensData,\n  verifySignatureAndUpdateNonceCh,\n  justVerifySignatureCh,\n  insertArbitrary(\`rho:registry:insertArbitrary\`),\n  stdout(\`rho:io:stdout\`),\n  secpVerify(\`rho:crypto:secp256k1Verify\`),\n  blake2b256(\`rho:crypto:blake2b256Hash\`),\n  revAddress(\`rho:rev:address\`),\n  registryLookup(\`rho:registry:lookup\`)\nin {\n\n\n  /*\n    bags: {\n      [bagId: String (incremental id)]: {\n        publicKey: String (public key),\n        n: Nil \\/ String (token id),\n        price: Nil \\/ Int\n        quantity: Int\n      }\n    }\n  */\n  bags!({/*DEFAULT_BAGS*/}) |\n\n  /*\n    bagsData: {\n      [bagId: String (bag id)]: Any\n    }\n  */\n  bagsData!({/*DEFAULT_BAGS_DATA*/}) |\n\n  /*\n    tokensData: {\n      [n: Strig (token id)]: String (registry URI)\n    }\n  */\n  tokensData!({/*DEFAULT_TOKENS_DATA*/}) |\n\n  for (@(payload, returnCh) <= verifySignatureAndUpdateNonceCh) {\n    stdout!("verifySignatureAndUpdateNonceCh") |\n    new hashCh, verifySignatureCh in {\n      match payload {\n        { "newNonce": String, "signature": String} => {\n          for (@current <<- mainCh) {\n            blake2b256!(\n              current.get("nonce").toUtf8Bytes(),\n              *hashCh\n            ) |\n            for (@hash <- hashCh) {\n              secpVerify!(\n                hash,\n                payload.get("signature").hexToBytes(),\n                current.get("publicKey").hexToBytes(),\n                *verifySignatureCh\n              )\n            } |\n            for (@result <- verifySignatureCh) {\n              match result {\n                true => {\n                  @returnCh!(true) |\n                  for (@c <- mainCh) {\n                    mainCh!(c.set("nonce", payload.get("newNonce")))\n                  }\n                }\n                false => {\n                  @returnCh!("error: Invalid signature, could not perform operation")\n                }\n              }\n            }\n          }\n        }\n        _ => {\n          @returnCh!("error: invalid payload, structure should be { 'newNonce': String, 'signature': String }")\n        }\n      }\n    }\n  } |\n\n  for (@(publicKey, signature, nonce, returnCh) <= justVerifySignatureCh) {\n    stdout!("justVerifySignatureCh") |\n    new hashCh, verifySignatureCh in {\n      blake2b256!(\n        nonce.toUtf8Bytes(),\n        *hashCh\n      ) |\n      for (@hash <- hashCh) {\n        secpVerify!(\n          hash,\n          signature.hexToBytes(),\n          publicKey.hexToBytes(),\n          *verifySignatureCh\n        )\n      } |\n      for (@result <- verifySignatureCh) {\n        @returnCh!(result)\n      }\n    }\n  } |\n\n  contract setLockedCh(payload, return) = {\n    stdout!("setLockedCh") |\n\n    for (@current <<- mainCh) {\n      match current.get("locked") {\n        true => {\n          return!("error: contract is already locked")\n        }\n        false => {\n          new verifyCh in {\n            verifySignatureAndUpdateNonceCh!((\n              {\n                "newNonce": *payload.get("newNonce"),\n                "signature": *payload.get("signature"),\n              },\n              *verifyCh\n            )) |\n            for (@verified <- verifyCh) {\n              match verified {\n                true => {\n                  for (@c <- mainCh) {\n                    mainCh!(c.set("locked", true))\n                  } |\n                  return!(true)\n                }\n                err => {\n                  return!(err)\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  } |\n\n  contract updateTokenDataCh(payload, return) = {\n    stdout!("updateTokenDataCh") |\n\n    for (@current <<- mainCh) {\n      match current.get("locked") {\n        true => {\n          return!("error: contract is locked, cannot update token data")\n        }\n        false => {\n          new verifyCh in {\n            verifySignatureAndUpdateNonceCh!((\n              {\n                "newNonce": *payload.get("newNonce"),\n                "signature": *payload.get("signature"),\n              },\n              *verifyCh\n            )) |\n            for (@verified <- verifyCh) {\n              match verified {\n                true => {\n                  for (@currentTokensData <- tokensData) {\n                    tokensData!(\n                      currentTokensData.set(*payload.get("n"), *payload.get("data"))\n                    )\n                  } |\n                  return!(true)\n                }\n                err => {\n                  return!(err)\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  } |\n\n  contract updateBagDataCh(payload, return) = {\n    stdout!("updateBagDataCh") |\n    for (@currentBags <<- bags) {\n      match currentBags.get(*payload.get("bagId")) {\n        Nil => {\n          return!("error : token (bag ID) " ++ *payload.get("bagId") ++ " does not exist")\n        }\n        bag => {\n          new verifyCh in {\n            justVerifySignatureCh!((\n              bag.get("publicKey"),\n              *payload.get("signature"),\n              bag.get("nonce"),\n              *verifyCh\n            )) |\n            for (@verified <- verifyCh) {\n              match verified {\n                true => {\n                  for (@currentBagsData <- bagsData) {\n                    bagsData!(\n                      currentBagsData.set(*payload.get("bagId"), *payload.get("data"))\n                    ) |\n                    return!(true)\n                  }\n                }\n                err => {\n                  return!("error: Invalid signature, could not perform operation")\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  } |\n\n  // add a token (1 or more)\n  contract createCh(payload, return) = {\n    stdout!("createCh") |\n\n    for (@current <<- mainCh) {\n      match current.get("locked") {\n        true => {\n          return!("error: contract is locked, cannot create token")\n        }\n        false => {\n          for (@currentBags <<- bags) {\n            new verifyCh in {\n              verifySignatureAndUpdateNonceCh!((\n                {\n                  "newNonce": *payload.get("newNonce"),\n                  "signature": *payload.get("signature"),\n                },\n                *verifyCh\n              )) |\n              for (@verified <- verifyCh) {\n                match verified {\n                  true => {\n                    match "\${n}" %% { "n": currentBags.size() } {\n                      bagId => {\n                        new nCh in {\n\n                          match *payload.get("n") {\n                            // token n already exists\n                            String => { nCh!(*payload.get("n")) }\n                            // token n does not exist, bag ID will be used as n\n                            _ => { nCh!(bagId) }\n                          } |\n\n                          for (@n <- nCh) {\n                            for (_ <- bags) {\n                              bags!(\n                                currentBags.set(bagId, {\n                                  "quantity": *payload.get("quantity"),\n                                  "publicKey": *payload.get("publicKey"),\n                                  "nonce": *payload.get("bagNonce"),\n                                  "n": n,\n                                  "price": *payload.get("price"),\n                                })\n                              ) \n                            } |\n\n                            match *payload.get("data") {\n                              Nil => {}\n                              data => {\n                                for (@currentTokensData <- tokensData) {\n                                  tokensData!(\n                                    currentTokensData.set(n, data)\n                                  )\n                                }\n                              }\n                            } |\n\n                            return!(true)\n                          }\n                        }\n                      }\n                    }\n                  }\n                  err => {\n                    return!(err)\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  } |\n\n  // purchase token (1 or more)\n  contract purchaseCh(payload, return) = {\n    stdout!("purchaseCh") |\n    for (@currentBags <<- bags) {\n      match currentBags.get(*payload.get("bagId")) {\n        Nil => {\n          return!("error : token (bag ID) " ++ *payload.get("bagId") ++ " does not exist")\n        }\n        bag => {\n          match bag.get("quantity") - *payload.get("quantity") >= 0 {\n            false => {\n              return!("error : not enough tokens in bag (bag ID: " ++ *payload.get("bagId") ++ ") available")\n            }\n            true => {\n              new RevVaultCh, ownerRevAddressCh in {\n\n                registryLookup!(\`rho:rchain:revVault\`, *RevVaultCh) |\n                revAddress!("fromPublicKey", bag.get("publicKey").hexToBytes(), *ownerRevAddressCh) |\n\n                for (@(_, RevVault) <- RevVaultCh; @ownerRevAddress <- ownerRevAddressCh) {\n                  match (\n                    *payload.get("purseRevAddr"),\n                    ownerRevAddress,\n                    *payload.get("quantity") * bag.get("price")\n                  ) {\n                    (from, to, amount) => {\n                      new purseVaultCh in {\n                        @RevVault!("findOrCreate", from, *purseVaultCh) |\n                        for (@(true, purseVault) <- purseVaultCh) {\n\n                          new resultCh in {\n                            @purseVault!("transfer", to, amount, *payload.get("purseAuthKey"), *resultCh) |\n                            for (@result <- resultCh) {\n\n                              match result {\n                                (true, Nil) => {\n                                  match "\${bagId}" %% { "bagId": currentBags.size() } {\n                                    bagId => {\n                                      match *payload.get("data") {\n                                        Nil => {}\n                                        data => {\n                                          for (@currentBagsData <- bagsData) {\n                                            bagsData!(currentBagsData.set(bagId, data))\n                                          }\n                                        }\n                                      } |\n                                      for (_ <- bags) {\n                                        bags!(\n                                          // New bag ID for new token ownership\n                                          currentBags.set(bagId, {\n                                            "quantity": *payload.get("quantity"),\n                                            "publicKey": *payload.get("publicKey"),\n                                            "nonce": *payload.get("nonce"),\n                                            "n": bag.get("n"),\n                                            "price": Nil,\n                                          // Udate quantity in seller token ownership\n                                          }).set(\n                                            *payload.get("bagId"),\n                                            bag.set("quantity", bag.get("quantity") - *payload.get("quantity"))\n                                          )\n                                        ) |\n                                        return!(true)\n                                      }\n                                    }\n                                  }\n                                }\n                                _ => {\n                                  bags!(currentBags) |\n                                  return!("error : REV transfer went wrong " ++ result.nth(2))\n                                }\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  } |\n\n  contract sendCh(payload, return) = {\n    stdout!("sendCh") |\n    for (@currentBags <<- bags) {\n      match currentBags.get(*payload.get("bagId")) {\n        Nil => {\n          return!("error : token (bag ID) " ++ *payload.get("bagId") ++ " does not exist")\n        }\n        bag => {\n          match bag.get("quantity") - *payload.get("quantity") >= 0 {\n            true => {\n              new justVerifySignatureReturnCh in {\n                justVerifySignatureCh!((\n                  bag.get("publicKey"),\n                  *payload.get("signature"),\n                  bag.get("nonce"),\n                  *justVerifySignatureCh\n                )) |\n                for (@r <- justVerifySignatureCh) {\n                  stdout!(r) |\n                  match r {\n                    true => {\n                      match "\${bagId}" %% { "bagId": currentBags.size() } {\n                        bagId => {\n                          // Add bag data if found in payload\n                          match *payload.get("data") {\n                            Nil => {}\n                            data => {\n                              for (@currentBagsData <- bagsData) {\n                                bagsData!(currentBagsData.set(bagId, data))\n                              }\n                            }\n                          } |\n                          for (_ <- bags) {\n                            bags!(\n                              // New bag ID for new token ownership\n                              currentBags.set(bagId, {\n                                "quantity": *payload.get("quantity"),\n                                "publicKey": *payload.get("publicKey"),\n                                "nonce": *payload.get("bagNonce"),\n                                "n": bag.get("n"),\n                                "price": Nil,\n                              // Udate quantity in seller token ownership\n                              }).set(\n                                *payload.get("bagId"),\n                                bag.set(\n                                  "quantity", bag.get("quantity") - *payload.get("quantity")\n                                ).set(\n                                  "nonce",\n                                  *payload.get("bagNonce2")\n                                )\n                              )\n                            )\n                          } |\n                          return!(true)\n                        }\n                      }\n                    }\n                    false => {\n                      return!("error: Invalid signature, could not perform operation")\n                    }\n                  }\n                }\n              }\n            }\n            false => {\n              return!("error : not enough tokens in bag (bag ID) " ++ *payload.get("bagId") ++ " available")\n            }\n          }\n        }\n      }\n    }\n  } |\n  \n  contract entryCh(action, return) = {\n    match *action.get("type") {\n      // Read capabilities\n      "READ_BAGS" => {\n        for (currentBags <<- bags) {\n          return!(*currentBags)\n        }\n      }\n      "READ_BAGS_DATA" => {\n        for (currentBagsData <<- bagsData) {\n          return!(*currentBagsData)\n        }\n      }\n      "READ_TOKENS_DATA" => {\n        for (@currentTokensData <<- tokensData) {\n          return!(currentTokensData)\n        }\n      }\n      "READ" => {\n        for (current <<- mainCh) {\n          return!(*current)\n        }\n      }\n      // Admin capabilities (require a signature of the nonce)\n      "SET_LOCKED" => {\n        match *action.get("payload") {\n          { "locked": true, "signature": String, "newNonce": String } => {\n            setLockedCh!(*action.get("payload"), *return)\n          }\n          _ => {\n            return!("error: invalid payload, structure should be { 'signature': String, 'newNonce': String, 'locked': Boolean }")\n          }\n        }\n      }\n      "UPDATE_TOKEN_DATA" => {\n        match *action.get("payload") {\n          { "signature": String, "newNonce": String, "n": String, "data": _ } => {\n            updateTokenDataCh!(*action.get("payload"), *return)\n          }\n          _ => {\n            return!("error: invalid payload, structure should be { 'signature': String, 'newNonce': String, 'n': String, 'data': _ }")\n          }\n        }\n      }\n      "UPDATE_BAG_DATA" => {\n        match *action.get("payload") {\n          { "signature": String, "newNonce": String, "bagId": String, "data": _ } => {\n            updateBagDataCh!(*action.get("payload"), *return)\n          }\n          _ => {\n            return!("error: invalid payload, structure should be { 'signature': String, 'newNonce': String, 'bagId': String, 'data': _ }")\n          }\n        }\n      }\n      "CREATE_TOKENS" => {\n        match *action.get("payload") {\n          {\n            "signature": String,\n            "newNonce": String,\n            "bagNonce": String,\n            "quantity": Int,\n            "publicKey": String,\n            "price": Nil \\/ Int,\n            "n": Nil \\/ String,\n            "data": _\n          } => {\n            createCh!(*action.get("payload"), *return)\n          }\n          _ => {\n            return!("error: invalid payload, structure should be { 'signature': String, 'newNonce': String, 'bagNonce': String, 'quantity': Int, 'n': Nil or String, 'price': Nil or Int, 'publicKey': String, 'data': Any }")\n          }\n        }\n      }\n      // Anyone capabilities\n      "PURCHASE_TOKENS" => {\n        match *action.get("payload") {\n          { "quantity": Int, "bagId": String, "publicKey": String, "nonce": String, "data": _, "purseRevAddr": _, "purseAuthKey": _ } => {\n            purchaseCh!(*action.get("payload"), *return)\n          }\n          _ => {\n            return!("error: invalid payload, structure should be { 'quantity': Int, 'bagId': String, 'publicKey': String, 'nonce': String, 'data': Any, 'purseRevAddr': String, 'purseAuthKey': AuthKey }")\n          }\n        }\n      }\n      "SEND_TOKENS" => {\n        match *action.get("payload") {\n          { "quantity": Int, "bagId": String, "publicKey": String, "signature": String, "bagNonce": String, "bagNonce2": String, "data": _, } => {\n            sendCh!(*action.get("payload"), *return)\n          }\n          _ => {\n            return!("error: invalid payload, structure should be { 'quantity': Int, 'bagId': Int, 'publicKey': String, 'signature': String, 'bagNonce': String, 'bagNonce2': String, 'data': Any }")\n          }\n        }\n      }\n      _ => {\n        return!("error: unknown action")\n      }\n    }\n  } |\n\n  insertArbitrary!(*entryCh, *entryUriCh) |\n\n  for (entryUri <- entryUriCh) {\n\n    mainCh!({\n      "registryUri": *entryUri,\n      "locked": false,\n      "publicKey": "${t}",\n      "nonce": "${e}",\n      "version": "0.3"\n    }) |\n    stdout!({\n      "registryUri": *entryUri,\n      "locked": false,\n      "publicKey": "${t}",\n      "nonce": "${e}",\n      "version": "0.3"\n    })\n\n    /*OUTPUT_CHANNEL*/\n  }\n}\n`},function(e,t){e.exports.createTokensTerm=(e,t,n,r,a,o,i,s,u)=>`new basket,\n  entryCh,\n  returnCh,\n  lookup(\`rho:registry:lookup\`),\n  stdout(\`rho:io:stdout\`)\nin {\n\n  lookup!(\`rho:id:${e}\`, *entryCh) |\n\n  for(entry <- entryCh) {\n    entry!(\n      {\n        "type": "CREATE_TOKENS",\n        "payload": {\n          // signature of the current nonce, with the private key of the owner (generateSignatureForNonce.js)\n          "signature": "${t}",\n          // new nonce, must be different and random (generateNonce.js)\n          "newNonce": "${n}",\n          // new nonce for the bag, must be random (generateNonce.js)\n          "bagNonce": "${r}",\n          // per token price, can be Nil if the token is not for sale\n          "price": ${i||"Nil"},\n          // The token you create can be a new one ("n" : Nil)\n          // or it can be linked to an existing token data (ex: "n": "0")\n          "n": ${"string"==typeof o?'"'+o+'"':"Nil"},\n          // quantity of tokens to create\n          "quantity": ${s},\n          // publicKey this set of tokens (depending on quantity) will belong to\n          "publicKey": "${a}", // used only if new token\n          // data is used only if new token ("n" : Nil)\n          "data": ${u?'"'+encodeURI(u)+'"':"Nil"}\n        }\n      },\n      *returnCh\n    )\n  } |\n\n  for (resp <- returnCh) {\n    match *resp {\n      String => { stdout!(*resp) }\n      true => { stdout!("success, token created") }\n    }\n  } |\n\n  basket!({ "status": "completed" })\n\n}\n`},function(e,t){e.exports.purchaseTokensTerm=(e,t,n,r,a,o,i)=>`\nnew\n  revVaultPurseCh,\n  priceCh,\n  quantityCh,\n  publicKeyCh,\n  nonceCh,\n  bagDataCh,\n  returnCh,\n  bagIdCh,\n  registryUriCh,\n  revAddressCh,\n  registryLookup(\`rho:registry:lookup\`),\n  stdout(\`rho:io:stdout\`),\n  revAddress(\`rho:rev:address\`)\nin {\n\n  /*\n    The 5 following values must be filled with proper values\n  */ \n  // Registry URI of the ERC-1155 contract\n  registryUriCh!!(\`rho:id:${e}\`) |\n  // Unique ID of the token you want to purchase\n  bagIdCh!!("${t}") |\n  // Per token price, make sure it is accurate\n  priceCh!!(${n||"Nil"}) |\n  // Bag data: Any\n  bagDataCh!!(${r?'"'+encodeURI(r)+'"':"Nil"}) |\n  // Quantity you want to purchase, make sure enough are available\n  quantityCh!!(${a}) |\n  // Your public key\n  publicKeyCh!!("${o}") |\n  // A unique nonce to be changed on each operation\n  nonceCh!!("${i}") |\n\n  registryLookup!(\`rho:rchain:revVault\`, *revVaultPurseCh) |\n\n  /*\n    Create a vault/purse that is just used once (purse)\n  */\n  for(@(_, *RevVaultPurse) <- revVaultPurseCh) {\n    new unf, purseRevAddrCh, purseAuthKeyCh, vaultCh, revAddressCh in {\n      revAddress!("fromUnforgeable", *unf, *purseRevAddrCh) |\n      RevVaultPurse!("unforgeableAuthKey", *unf, *purseAuthKeyCh) |\n      for (@purseAuthKey <- purseAuthKeyCh; @purseRevAddr <- purseRevAddrCh) {\n\n        stdout!({"new purse rev addr": purseRevAddr, "purse authKey": purseAuthKey}) |\n\n        RevVaultPurse!("findOrCreate", purseRevAddr, *vaultCh) |\n\n        for (\n          @(true, *vault) <- vaultCh;\n          @publicKey <- publicKeyCh;\n          @nonce <- nonceCh;\n          @bagId <- bagIdCh;\n          @registryUri <- registryUriCh;\n          @price <- priceCh;\n          @bagData <- bagDataCh;\n          @quantity <- quantityCh\n        ) {\n\n          revAddress!("fromPublicKey", publicKey.hexToBytes(), *revAddressCh) |\n\n          new RevVaultCh in {\n\n            registryLookup!(\`rho:rchain:revVault\`, *RevVaultCh) |\n            for (@(_, RevVault) <- RevVaultCh; deployerRevAddress <- revAddressCh) {\n\n              stdout!(("3.transfer_funds.rho")) |\n\n              /*\n                Put price * quantity REV in the purse\n              */\n              match (\n                *deployerRevAddress,\n                purseRevAddr,\n                price * quantity\n              ) {\n                (from, to, amount) => {\n\n                  new vaultCh, revVaultkeyCh, deployerId(\`rho:rchain:deployerId\`) in {\n                    @RevVault!("findOrCreate", from, *vaultCh) |\n                    @RevVault!("deployerAuthKey", *deployerId, *revVaultkeyCh) |\n                    for (@(true, vault) <- vaultCh; key <- revVaultkeyCh) {\n\n                      stdout!(("Beginning transfer of ", amount, "REV from", from, "to", to)) |\n\n                      new resultCh, entryCh in {\n                        @vault!("transfer", to, amount, *key, *resultCh) |\n                        for (@result <- resultCh) {\n\n                          stdout!(("Finished transfer of ", amount, "REV to", to, "result was:", result)) |\n                          match result {\n                            (true, Nil) => {\n                              stdout!("yes") |\n                              registryLookup!(registryUri, *entryCh) |\n\n                              for(entry <- entryCh) {\n                                stdout!(("GET ENTRY", *entry)) |\n                                entry!(\n                                  {\n                                    "type": "PURCHASE_TOKENS",\n                                    "payload": {\n                                      "quantity": quantity,\n                                      "bagId": bagId,\n                                      "data": bagData,\n                                      "nonce": nonce,\n                                      "publicKey": publicKey,\n                                      "purseRevAddr": purseRevAddr,\n                                      "purseAuthKey": purseAuthKey\n                                    }\n                                  },\n                                  *returnCh\n                                ) |\n                                for (resp <- returnCh) {\n                                  match *resp {\n                                    String => { stdout!(*resp) }\n                                    true => { stdout!("success, purchase successful") }\n                                  }\n                                }\n                              }\n                            }\n                            _ => {\n                              stdout!(result) |\n                              stdout!("no")\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n`},function(e,t){e.exports.sendTokensTerm=(e,t,n,r,a,o,i,s)=>`new basket,\n  entryCh,\n  returnCh,\n  lookup(\`rho:registry:lookup\`),\n  stdout(\`rho:io:stdout\`)\nin {\n\n  lookup!(\`rho:id:${e}\`, *entryCh) |\n\n  for(entry <- entryCh) {\n    entry!(\n      {\n        "type": "SEND_TOKENS",\n        "payload": {\n          // signature of the current nonce, with the private key of the owner (generateSignatureForNonce.js)\n          "signature": "${t}",\n          // new nonce, must be different and random (generateNonce.js)\n          "bagNonce": "${n}",\n          // new nonce for the new bag\n          "bagNonce2": "${r}",\n          // bag ID (ex: "0")\n          "bagId": "${i}",\n          // quantity of tokens to send\n          "quantity": ${a},\n          // publicKey this send those tokens to (can be the same just split a bag)\n          "publicKey": "${o}",\n          // data (optional) to be attached to the new bag (in bagsData)\n          "data": ${s?'"'+encodeURI(s)+'"':"Nil"}\n        }\n      },\n      *returnCh\n    )\n  } |\n\n  for (resp <- returnCh) {\n    match *resp {\n      String => { stdout!(*resp) }\n      true => { stdout!("success, tokens sent") }\n    }\n  } |\n\n  basket!({ "status": "completed" })\n\n}\n`},function(e,t){e.exports.setLockedTerm=(e,t,n)=>`new basket,\n  entryCh,\n  returnCh,\n  lookup(\`rho:registry:lookup\`),\n  stdout(\`rho:io:stdout\`)\nin {\n\n  lookup!(\`rho:id:${e}\`, *entryCh) |\n\n  for(entry <- entryCh) {\n    entry!(\n      {\n        "type": "SET_LOCKED",\n        "payload": {\n          // signature of the current nonce, with the private key of the owner (generateSignatureForNonce.js)\n          "signature": "${n}",\n          // new nonce, must be different and random (generateNonce.js)\n          "newNonce": "${t}",\n          //you cannot unlock, this value must always be true\n          "locked": true\n        }\n      },\n      *returnCh\n    )\n  } |\n\n  for (resp <- returnCh) {\n    match *resp {\n      String => { stdout!(*resp) }\n      true => { stdout!("success, tokens locked") }\n    }\n  } |\n\n  basket!({ "status": "completed" })\n\n}\n`},function(e,t){e.exports.updateTokenDataTerm=(e,t,n,r)=>`new basket,\n  entryCh,\n  returnCh,\n  lookup(\`rho:registry:lookup\`),\n  stdout(\`rho:io:stdout\`)\nin {\n\n  lookup!(\`rho:id:${e}\`, *entryCh) |\n\n  for(entry <- entryCh) {\n    entry!(\n      {\n        "type": "UPDATE_TOKEN_DATA",\n        "payload": {\n          // signature of the current nonce, with the private key of the owner (generateSignatureForNonce.js)\n          "signature": "${signature}",\n          // new nonce, must be different and random (generateNonce.js)\n          "newNonce": "${t}",\n          // token ID you want to attach data to\n          "n": ${"string"==typeof n?'"'+n+'"':"Nil"},\n          // data is used only if new token ("n" : Nil)\n          "data": ${r?'"'+encodeURI(r)+'"':"Nil"}\n        }\n      },\n      *returnCh\n    )\n  } |\n\n  for (resp <- returnCh) {\n    match *resp {\n      String => { stdout!(*resp) }\n      true => { stdout!("success, token data updated") }\n    }\n  } |\n\n  basket!({ "status": "completed" })\n\n}\n`},function(e,t){e.exports.updateBagDataTerm=(e,t,n,r,a)=>`new basket,\n  entryCh,\n  returnCh,\n  lookup(\`rho:registry:lookup\`),\n  stdout(\`rho:io:stdout\`)\nin {\n\n  lookup!(\`rho:id:${e}\`, *entryCh) |\n\n  for(entry <- entryCh) {\n    entry!(\n      {\n        "type": "UPDATE_BAG_DATA",\n        "payload": {\n          // signature of the current nonce, with the private key of the owner (generateSignatureForNonce.js)\n          "signature": "${n}",\n          // new nonce, must be different and random (generateNonce.js)\n          "newNonce": "${t}",\n          // bag ID you want to attach data to\n          "bagId": "${r}",\n          // data is used only if new token ("n" : Nil)\n          "data": ${a?'"'+encodeURI(a)+'"':"Nil"}\n        }\n      },\n      *returnCh\n    )\n  } |\n\n  for (resp <- returnCh) {\n    match *resp {\n      String => { stdout!(*resp) }\n      true => { stdout!("success, bag data updated") }\n    }\n  } |\n\n  basket!({ "status": "completed" })\n\n}\n`}]);